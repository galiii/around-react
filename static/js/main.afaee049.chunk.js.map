{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ImagePopup.js","components/Footer.js","utils/utils.js","utils/api.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","src","alt","onClick","type","length","Main","cards","onEditAvatarClick","onEditProfileClick","onAddPlaceClick","map","PopupWithForm","name","title","formName","buttonSubmitTitle","isOpen","onClose","onSubmit","children","popupClassName","action","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","useEffect","about","e","preventDefault","id","placeholder","required","minLength","maxLength","value","onChange","EditAvatarPopup","onUpdateAvatar","avatarRef","useRef","current","avatar","ref","AddPlacePopup","onAddPlaceSubmit","link","setLink","ImagePopup","props","selectedCard","Footer","customFetch","url","headers","fetch","then","res","ok","json","Promise","reject","statusText","api","baseUrl","getUserInfo","_baseUrl","_headers","getInitialCards","addCard","method","body","JSON","stringify","deleteCard","cardId","console","log","likeCard","dislikeCard","changeLikeCardStatus","editProfileUserInfo","updateUserImage","this","authorization","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isImagePopupOpen","setIsImagePopupOpen","setSelectedCard","setCurrentUser","setCards","all","userData","cardData","catch","error","closeAllPopups","Provider","newCard","state","c","filter","user","finally","data","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMAUgBA,MARf,WACE,OACG,wBAAQC,UAAU,SAAlB,SACE,qBAAKA,UAAU,oBCHVC,EAAqBC,IAAMC,gBCwDzBC,MAvDf,YAAgE,IAAhDC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,YAAaC,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,aACvCC,EAAcP,IAAMQ,WAAWT,GAK/BU,EAAQN,EAAKO,MAAMC,MAAQJ,EAAYI,IAGvCC,EAAyB,uBAC7BH,EAAQ,uBAAyB,uBAI7BI,EAAUV,EAAKW,MAAMC,MAAK,SAACC,GAAD,OAAOA,EAAEL,MAAQJ,EAAYI,OAGvDM,EAAuB,qBAC3BJ,EAAU,oBAAsB,IAOlC,OACE,qBAAIf,UAAU,OAAd,UACE,qBACEoB,IAAKf,EAAI,KACTgB,IAAKhB,EAAI,KACTL,UAAU,cACVsB,QAVc,kBAAMhB,EAAYD,MAYlC,wBACEkB,KAAK,SACL,aAAW,SACXvB,UAAWc,EACXQ,QAdmB,kBAAMd,EAAaH,MAgBxC,sBAAKL,UAAU,YAAf,UACE,oBAAIA,UAAU,cAAd,SAA6BK,EAAI,OACjC,sBAAKL,UAAU,uBAAf,UACE,wBACEuB,KAAK,SACL,aAAW,OACXvB,UAAWmB,EACXG,QAxBa,kBAAMf,EAAWF,MA0BhC,sBAAML,UAAU,oBAAhB,SAAqCK,EAAI,MAAUmB,mBCmB9CC,MAlEf,YAQI,IAPFC,EAOC,EAPDA,MACAC,EAMC,EANDA,kBACAC,EAKC,EALDA,mBACAC,EAIC,EAJDA,gBACAvB,EAGC,EAHDA,YACAC,EAEC,EAFDA,WACAC,EACC,EADDA,aAEMC,EAAcP,IAAMQ,WAAWT,GAErC,OACE,uBAAMD,UAAU,UAAhB,UAEE,0BAASA,UAAU,UAAnB,UACE,sBAAKA,UAAU,2BAAf,UACE,qBACEoB,IAAKX,EAAW,OAChBY,IAAKZ,EAAW,KAChBT,UAAU,mBAGZ,wBACEA,UAAU,wBACVsB,QAASK,OAIb,sBAAK3B,UAAU,+BAAf,UACE,sBAAKA,UAAU,2BAAf,UACE,oBAAIA,UAAU,gBAAd,SAA+BS,EAAW,OAC1C,wBACEc,KAAK,SACL,aAAW,OACXvB,UAAU,uBACVsB,QAASM,OAGb,oBAAG5B,UAAU,eAAb,cAA8BS,EAAW,YAE3C,wBACEc,KAAK,SACL,aAAW,MACXvB,UAAU,sBACVsB,QAASO,OAKb,yBAAS7B,UAAU,QAAnB,SACE,oBAAIA,UAAU,cAAd,SACG0B,EAAMI,KAAI,SAACzB,GAAD,OACT,cAAC,EAAD,CAEEA,KAAMA,EACNC,YAAaA,EACbC,WAAYA,EACZC,aAAcA,GAJTH,EAAI,gBCjBR0B,MAtCf,YASI,IARFC,EAQC,EARDA,KACAC,EAOC,EAPDA,MACAC,EAMC,EANDA,SACAC,EAKC,EALDA,kBACAC,EAIC,EAJDA,OACAC,EAGC,EAHDA,QACAC,EAEC,EAFDA,SACAC,EACC,EADDA,SAIMC,EAAc,2BAAuBR,EAAvB,YAClBI,EAAS,aAAe,IAG1B,OACE,qBAAKpC,UAAWwC,EAAhB,SACE,sBAAKxC,UAAU,mBAAf,UACE,wBACEuB,KAAK,SACL,aAAW,QACXvB,UAAU,sBACVsB,QAASe,IAEX,oBAAIrC,UAAU,eAAd,SAA8BiC,IAC9B,uBAAMD,KAAME,EAAUO,OAAO,IAAIzC,UAAU,OAAOsC,SAAUA,EAA5D,UACGC,EAED,wBAAQhB,KAAK,SAAS,aAAW,SAASvB,UAAU,eAApD,SACGmC,aCwCEO,MApEf,YAA8D,IAAlCN,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,QAASM,EAAgB,EAAhBA,aAErClC,EAAcP,IAAMQ,WAAWT,GACrC,EAAwBC,IAAM0C,SAAS,IAAvC,mBAAOZ,EAAP,KAAaa,EAAb,KACA,EAAsC3C,IAAM0C,SAAS,IAArD,mBAAOE,EAAP,KAAoBC,EAApB,KAuBA,OAlBA7C,IAAM8C,WAAU,WACdH,EAAQpC,EAAYuB,MACpBe,EAAetC,EAAYwC,SAC1B,CAACxC,IAgBF,eAAC,EAAD,CACEuB,KAAK,eACLC,MAAM,eACNC,SAAS,UACTC,kBAAkB,OAClBC,OAAQA,EACRC,QAASA,EACTC,SAlBiB,SAACY,GACpBA,EAAEC,iBAGFR,EAAa,CACXX,OACAiB,MAAOH,KAKT,UASE,uBACEvB,KAAK,OACLS,KAAK,OACLoB,GAAG,aACHpD,UAAU,oCACVqD,YAAY,OACZC,UAAQ,EACRC,UAAU,IACVC,UAAU,KACVC,MAAOzB,GAAQ,GACf0B,SAjCmB,SAACR,GAAD,OAAOL,EAAQK,EAAC,OAAD,UAmCpC,sBAAME,GAAG,qBAET,uBACE7B,KAAK,OACLS,KAAK,MACLoB,GAAG,YACHpD,UAAU,mCACVqD,YAAY,MACZC,UAAQ,EACRC,UAAU,IACVC,UAAU,MACVC,MAAOX,GAAe,GACtBY,SA9C0B,SAACR,GAAD,OAAOH,EAAeG,EAAC,OAAD,UAgDlD,sBAAME,GAAG,wBCvBAO,MAzCf,YAA+D,IAApCvB,EAAmC,EAAnCA,OAAQC,EAA2B,EAA3BA,QAASuB,EAAkB,EAAlBA,eACpCC,EAAY3D,IAAM4D,OAAO,IAc/B,OAZA5D,IAAM8C,WAAU,WACda,EAAUE,QAAQN,MAAQ,KACzB,CAACrB,IAWF,8BACE,eAAC,EAAD,CACEJ,KAAK,uBACLC,MAAM,yBACNC,SAAS,cACTC,kBAAkB,OAClBC,OAAQA,EACRC,QAASA,EACTC,SAjBe,SAACY,GACpBA,EAAEC,iBAEFS,EAAe,CACbI,OAAQH,EAAUE,QAAQN,SAM1B,UASE,uBACElC,KAAK,MACLS,KAAK,SACLoB,GAAG,eACHpD,UAAU,sCACVqD,YAAY,SACZC,UAAQ,EACRW,IAAKJ,IAEP,sBAAMT,GAAG,6BC2BFc,MA9Df,YAA+D,IAAtC9B,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,QAAS8B,EAAoB,EAApBA,iBACxC,EAAwBjE,IAAM0C,SAAS,IAAvC,mBAAOZ,EAAP,KAAaa,EAAb,KACA,EAAwB3C,IAAM0C,SAAS,IAAvC,mBAAOwB,EAAP,KAAaC,EAAb,KAsBA,OAlBAnE,IAAM8C,WAAU,WACdH,EAAQ,IACRwB,EAAQ,MACP,CAACjC,IAgBF,eAAC,EAAD,CACEJ,KAAK,WACLC,MAAM,YACNC,SAAS,MACTC,kBAAkB,SAClBC,OAAQA,EACRC,QAASA,EACTC,SAlBiB,SAACY,GACpBA,EAAEC,iBAEFgB,EAAiB,CAEfnC,OACAoC,UAKF,UASE,uBACE7C,KAAK,OACLS,KAAK,aACLoB,GAAG,mBACHpD,UAAU,0CACVqD,YAAY,QACZC,UAAQ,EACRC,UAAU,IACVC,UAAU,KACVC,MAAOzB,GAAQ,GACf0B,SAjCgB,SAACR,GAAD,OAAOL,EAAQK,EAAC,OAAD,UAmCjC,sBAAME,GAAG,2BACT,uBACE7B,KAAK,MACLS,KAAK,YACLoB,GAAG,kBACHpD,UAAU,yCACVqD,YAAY,aACZC,UAAQ,EACRG,MAAOW,GAAQ,GACfV,SA3CgB,SAACR,GAAD,OAAOmB,EAAQnB,EAAC,OAAD,UA6CjC,sBAAME,GAAG,8BCvBAkB,MAnCf,SAAoBC,GAElB,OACE,qBACEvE,UACEuE,EAAMnC,OAAN,2BACwBmC,EAAMvC,KAD9B,0CAEwBuC,EAAMvC,MAJlC,SAOE,sBAAKhC,UAAU,2CAAf,UACE,wBACEuB,KAAK,SACL,aAAW,cACXvB,UAAU,sBACVsB,QAASiD,EAAMlC,UAEjB,yBAAQrC,UAAU,gBAAlB,UACE,qBACEqB,IAAI,UACJD,IAAKmD,EAAMC,aAAN,KACLxE,UAAU,iBAEZ,4BACEA,UAAU,iBACV,aAAYuE,EAAMC,aAAN,KAFd,SAIGD,EAAMC,aAAN,gBCnBGC,MARf,WACE,OACG,wBAAQzE,UAAU,SAAlB,SACE,mBAAGA,UAAU,eAAb,qC,QCCK0E,EAAc,SAACC,EAAKC,GAAN,OACzBC,MAAMF,EAAKC,GACRE,MAAK,SAACC,GAAD,OACJA,EAAIC,GAAKD,EAAIE,OAASC,QAAQC,OAAR,iBAAyBJ,EAAIK,iBC0F1CC,EARH,IAxFV,cAAmC,IAAD,OAApBC,EAAoB,EAApBA,QAASV,EAAW,EAAXA,QAAW,yBAOlCW,YAAc,WACZ,OAAOb,EAAY,GAAD,OAAI,EAAKc,SAAT,aAA8B,CAC9CZ,QAAS,EAAKa,YATgB,KAclCC,gBAAkB,WAChB,OAAOhB,EAAY,GAAD,OAAI,EAAKc,SAAT,UAA2B,CAC3CZ,QAAS,EAAKa,YAhBgB,KAqBlCE,QAAU,YAAqB,IAAlB3D,EAAiB,EAAjBA,KAAMoC,EAAW,EAAXA,KACjB,OAAOM,EAAY,GAAD,OAAI,EAAKc,SAAT,UAA2B,CAC3CZ,QAAS,EAAKa,SACdG,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAGnB/D,OACAoC,YA7B4B,KAmClC4B,WAAa,SAACC,GAEZ,OADAC,QAAQC,IAAI,MAAOF,GACZvB,EAAY,GAAD,OAAI,EAAKc,SAAT,kBAA2BS,GAAU,CACrDrB,QAAS,EAAKa,SACdG,OAAQ,YAvCsB,KA4ClCQ,SAAW,SAACH,GACV,OAAOvB,EAAY,GAAD,OAAI,EAAKc,SAAT,wBAAiCS,GAAU,CAC3DrB,QAAS,EAAKa,SACdG,OAAQ,SA/CsB,KAoDlCS,YAAc,SAACJ,GACb,OAAOvB,EAAY,GAAD,OAAI,EAAKc,SAAT,wBAAiCS,GAAU,CAC3DrB,QAAS,EAAKa,SACdG,OAAQ,YAvDsB,KA2DlCU,qBAAuB,SAACL,EAAQlF,GAC9B,OAAO2D,EAAY,GAAD,OAAI,EAAKc,SAAT,wBAAiCS,GAAU,CAC3DrB,QAAS,EAAKa,SACdG,OAAO,GAAD,OAAK7E,EAAU,MAAQ,aA9DC,KAmElCwF,oBAAsB,YAAsB,IAAnBvE,EAAkB,EAAlBA,KAAMiB,EAAY,EAAZA,MAC7B,OAAOyB,EAAY,GAAD,OAAI,EAAKc,SAAT,aAA8B,CAC9CZ,QAAS,EAAKa,SACdG,OAAQ,QACRC,KAAMC,KAAKC,UAAU,CACnB/D,OACAiB,aAzE4B,KA+ElCuD,gBAAkB,SAACxC,GACjB,OAAOU,EAAY,GAAD,OAAI,EAAKc,SAAT,oBAAqC,CACrDZ,QAAS,EAAKa,SACdG,OAAQ,QACRC,KAAMC,KAAKC,UAAU/B,MAjFvByC,KAAKjB,SAAWF,EAChBmB,KAAKhB,SAAWb,EAqFR,CAAQ,CAClBU,QAAS,8CACTV,QAAS,CACP8B,cAAe,uCACf,eAAgB,sBC2GLC,MA5Lf,WAEE,MACEzG,IAAM0C,UAAS,GADjB,mBAAOgE,EAAP,KAA+BC,EAA/B,KAEA,EAAsD3G,IAAM0C,UAAS,GAArE,mBAAOkE,EAAP,KAA4BC,EAA5B,KACA,EACE7G,IAAM0C,UAAS,GADjB,mBAAOoE,EAAP,KAA8BC,EAA9B,KAEA,EAAgD/G,IAAM0C,UAAS,GAA/D,mBAAOsE,EAAP,KAAyBC,EAAzB,KAGA,EAAwCjH,IAAM0C,SAAS,CACrDZ,KAAM,GACNoC,KAAM,KAFR,mBAAOI,EAAP,KAAqB4C,EAArB,KAKA,EAAsClH,IAAM0C,SAAS,IAArD,mBAAOnC,EAAP,KAAoB4G,EAApB,KACA,EAA0BnH,IAAM0C,SAAS,IAAzC,mBAAOlB,EAAP,KAAc4F,EAAd,KAGApH,IAAM8C,WAAU,WACdkC,QAAQqC,IAAI,CAAClC,EAAIE,cAAeF,EAAIK,oBACjCZ,MAAK,YAA2B,IAAD,mBAAxB0C,EAAwB,KAAdC,EAAc,KAC9BJ,EAAe,eAAKG,IACpBF,EAAS,YAAIG,OAEdC,MAAMxB,QAAQyB,SAChB,IAGH,IAgGMC,EAAiB,WACrBX,GAAyB,GACzBJ,GAA0B,GAC1BE,GAAuB,GACvBI,GAAoB,IAGtB,OACE,qBAAKnH,UAAU,kBAAf,SAEE,eAACC,EAAmB4H,SAApB,CAA6BpE,MAAOhD,EAApC,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CACEkB,kBA7GsB,kBAAMsF,GAAyB,IA8GrDrF,mBA7GuB,kBAAMiF,GAA0B,IA8GvDhF,gBA7GoB,kBAAMkF,GAAuB,IA8GjDrF,MAAOA,EACPpB,YA5GgB,SAACD,GACvB+G,EAAgB,CACdpF,KAAM3B,EAAK2B,KACXoC,KAAM/D,EAAK+D,OAEb+C,GAAoB,IAwGd5G,WApGe,SAACF,GACtB,IAAMU,EAAUV,EAAKW,MAAMC,MAAK,SAACC,GAAD,OAAOA,EAAEL,MAAQJ,EAAYI,OAC7DwE,EACGiB,qBAAqBjG,EAAKQ,KAAME,GAChC+D,MAAK,SAACgD,GACLR,GAAS,SAACS,GAAD,OACPA,EAAMjG,KAAI,SAACkG,GAAD,OAAQA,EAAEnH,MAAQR,EAAKQ,IAAMiH,EAAUE,WAGpDN,MAAMxB,QAAQyB,QA4FXnH,aAxFiB,SAACH,GACxBgF,EACGW,WAAW3F,EAAKQ,KAChBiE,MAAK,SAACC,GACLuC,GACE,SAACS,GAAD,OAAWA,EAAME,QAAO,SAACD,GAAD,OAAOA,EAAEnH,MAAQR,EAAKQ,aAIjD6G,MAAMxB,QAAQyB,UAiFb,cAAC,EAAD,IAEA,cAAC,EAAD,CACEvF,OAAQwE,EACRvE,QAASuF,EACTjF,aAlFiB,SAACuF,GACxB7C,EACGkB,oBAAoB2B,GACpBpD,MAAK,SAACC,GACLsC,EAAe,eACVtC,IAEL8B,GAA0B,MAE3Ba,MAAMxB,QAAQyB,OACdQ,SACC,kBAAMjC,QAAQC,IAAI,iBA0ElB,cAAC,EAAD,CACE/D,OAAQ4E,EACR3E,QAASuF,EACThE,eAxEmB,SAACQ,GAC1BiB,EACGmB,gBAAgBpC,GAChBU,MAAK,SAACC,GACLsC,EAAe,eACVtC,IAGLkC,GAAyB,MAE1BS,MAAMxB,QAAQyB,OACdQ,SACC,kBAAMjC,QAAQC,IAAI,iBA+DlB,cAAC,EAAD,CACE/D,OAAQ0E,EACRzE,QAASuF,EACTzD,iBA5DqB,SAACiE,GAE5B/C,EACGM,QAAQyC,GACRtD,MAAK,SAACC,GACL,IAAM+C,EAAU,CACd9F,KAAMoG,EAAI,KACVhE,KAAMgE,EAAI,KACVvH,IAAKkE,EAAIlE,IACTD,MAAOmE,EAAInE,MACXI,MAAO+D,EAAI/D,OAEbsG,EAAS,CAACQ,GAAF,mBAAcpG,KACtBqF,GAAuB,MAExBW,MAAMxB,QAAQyB,OACdQ,SACC,kBAAMjC,QAAQC,IAAI,iBA8ClB,cAAC,EAAD,CACEnE,KAAK,cACLC,MAAM,iBACNC,SAAS,SACTC,kBAAkB,MAElBE,QAASuF,IAKX,cAAC,EAAD,CACExF,OAAQ8E,EACRlF,KAAK,QACLwC,aAAcA,EACdnC,QAASuF,UCvLJS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzD,MAAK,YAAkD,IAA/C0D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.afaee049.chunk.js","sourcesContent":["import React from 'react';\n\n function Header() {\n   return (\n      <header className=\"header\">\n        <div className=\"header__logo\"></div>\n      </header>\n   );\n }\n   \n export default Header;","import React from 'react';\n\nexport const CurrentUserContext = React.createContext(); ","import React from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nfunction Card({ card, onCardClick, onCardLike, onCardDelete }) {\n  const currentUser = React.useContext(CurrentUserContext);\n\n  //likes [] _id name link owner: { name about avatar _id cohort }\n\n  //For delete button\n  const isOwn = card.owner._id === currentUser._id; //Checking if the current user is the owner of the current card\n\n  // Creating a variable which you'll then set in `className` for the delete button\n  const cardDeleteButtonClassName = `card__delete ${\n    isOwn ? \"card__delete_visible\" : \"card__delete_hidden\"\n  }`;\n\n  // Check if the card was liked by the current user\n  const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n  // Create a variable which you then set in `className` for the like button\n  const cardLikeButtonClassName = `card__like ${\n    isLiked ? \"card__like_active\" : \"\"\n  }`;\n\n  const handleClick = () => onCardClick(card);\n  const handleCardLike = () => onCardLike(card);\n  const handleCardDelete = () => onCardDelete(card);\n\n  return (\n    <li className=\"card\">\n      <img\n        src={card[\"link\"]}\n        alt={card[\"name\"]}\n        className=\"card__image\"\n        onClick={handleClick}\n      />\n      <button\n        type=\"button\"\n        aria-label=\"Delete\"\n        className={cardDeleteButtonClassName}\n        onClick={handleCardDelete}\n      ></button>\n      <div className=\"card__row\">\n        <h2 className=\"card__title\">{card[\"name\"]}</h2>\n        <div className=\"card__like-container\">\n          <button\n            type=\"button\"\n            aria-label=\"Like\"\n            className={cardLikeButtonClassName}\n            onClick={handleCardLike}\n          ></button>\n          <span className=\"card__likes-count\">{card[\"likes\"].length}</span>\n        </div>\n      </div>\n    </li>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./Card\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nfunction Main({\n  cards,\n  onEditAvatarClick,\n  onEditProfileClick,\n  onAddPlaceClick,\n  onCardClick,\n  onCardLike,\n  onCardDelete,\n}) {\n  const currentUser = React.useContext(CurrentUserContext);\n\n  return (\n    <main className=\"content\">\n      {/* Profile */}\n      <section className=\"profile\">\n        <div className=\"profile__image-container\">\n          <img\n            src={currentUser[\"avatar\"]}\n            alt={currentUser[\"name\"]}\n            className=\"profile__image\"\n          />\n\n          <button\n            className=\"profile__update-image\"\n            onClick={onEditAvatarClick}\n          ></button>\n        </div>\n\n        <div className=\"profile__section-information\">\n          <div className=\"profile__row-information\">\n            <h1 className=\"profile__name\">{currentUser[\"name\"]}</h1>\n            <button\n              type=\"button\"\n              aria-label=\"Edit\"\n              className=\"profile__edit-button\"\n              onClick={onEditProfileClick}\n            ></button>\n          </div>\n          <p className=\"profile__job\"> {currentUser[\"about\"]}</p>\n        </div>\n        <button\n          type=\"button\"\n          aria-label=\"Add\"\n          className=\"profile__add-button\"\n          onClick={onAddPlaceClick}\n        ></button>\n      </section>\n\n      {/* Cards__list  */}\n      <section className=\"cards\">\n        <ul className=\"cards__list\">\n          {cards.map((card) => (\n            <Card\n              key={card[\"_id\"]}\n              card={card}\n              onCardClick={onCardClick}\n              onCardLike={onCardLike}\n              onCardDelete={onCardDelete}\n            />\n          ))}\n        </ul>\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n","import React from \"react\";\n\nfunction PopupWithForm({\n  name,\n  title,\n  formName,\n  buttonSubmitTitle,\n  isOpen,\n  onClose,\n  onSubmit,\n  children,\n}) {\n  //console.log(\"popup with\",{children});\n\n  const popupClassName = `popup popup_type_${name} ${\n    isOpen ? \"popup_open\" : \"\"\n  }`;\n  \n  return (\n    <div className={popupClassName}>\n      <div className=\"popup__container\">\n        <button\n          type=\"button\"\n          aria-label=\"Close\"\n          className=\"popup__close-button\"\n          onClick={onClose}\n        ></button>\n        <h3 className=\"popup__title\">{title}</h3>\n        <form name={formName} action=\"#\" className=\"form\" onSubmit={onSubmit}>\n          {children}\n\n          <button type=\"submit\" aria-label=\"Submit\" className=\"form__button\">\n            {buttonSubmitTitle}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default PopupWithForm;\n","import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser }) {\n \n  const currentUser = React.useContext(CurrentUserContext); //Subscription to the context\n  const [name, setName] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n  //const [errorMessage, setErrorMessage] = React.useState(\"\");\n\n  // After loading the current user from the API\n  // their data will be used in managed components.\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n\n  const handleChangeName = (e) => setName(e[\"target\"][\"value\"]);\n  const handleChangeDescription = (e) => setDescription(e[\"target\"][\"value\"]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault(); //Prevent the browser from navigating to the form address\n\n    //Pass the values of the managed components to the external handler\n    onUpdateUser({\n      name,\n      about: description,\n    });\n  };\n\n  return (\n    <PopupWithForm\n      name=\"edit-profile\"\n      title=\"Edit Profile\"\n      formName=\"profile\"\n      buttonSubmitTitle=\"Save\"\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n    >\n      <input\n        type=\"text\"\n        name=\"name\"\n        id=\"name-input\"\n        className=\"form__input form__input_type_name\"\n        placeholder=\"name\"\n        required\n        minLength=\"2\"\n        maxLength=\"40\"\n        value={name || \"\"} //It's give me Error on the console of undefined\n        onChange={handleChangeName}\n      />\n      <span id=\"name-input-error\"></span>\n\n      <input\n        type=\"text\"\n        name=\"job\"\n        id=\"job-input\"\n        className=\"form__input form__input_type_job\"\n        placeholder=\"job\"\n        required\n        minLength=\"2\"\n        maxLength=\"200\"\n        value={description || \"\"} //It's give me Error on the console of undefined\n        onChange={handleChangeDescription}\n      />\n      <span id=\"job-input-error\"></span>\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;\n","import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction EditAvatarPopup({ isOpen, onClose, onUpdateAvatar }) {\n  const avatarRef = React.useRef(\"\"); //Assigning the object returned by a hook to a variable\n\n  React.useEffect(() => {\n    avatarRef.current.value = \"\";\n  }, [isOpen]); //When isOpen reset name and avatar (i did want to prevent this but i not sure how to reset)\n\n  const handleSubmit = (e) => {\n    e.preventDefault(); //Prevent the browser from navigating to the form address\n\n    onUpdateAvatar({\n      avatar: avatarRef.current.value,\n    });\n  };\n\n  return (\n    <div>\n      <PopupWithForm\n        name=\"update-image-profile\"\n        title=\"Change profile picture\"\n        formName=\"profile-img\"\n        buttonSubmitTitle=\"Save\"\n        isOpen={isOpen}\n        onClose={onClose}\n        onSubmit={handleSubmit}\n      >\n        <input\n          type=\"url\"\n          name=\"avatar\"\n          id=\"avatar-input\"\n          className=\"form__input form__input_type_avatar\"\n          placeholder=\"avatar\"\n          required\n          ref={avatarRef}\n        />\n        <span id=\"avatar-input-error\"></span>\n      </PopupWithForm>\n    </div>\n  );\n}\n\nexport default EditAvatarPopup;\n","import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction AddPlacePopup({ isOpen, onClose, onAddPlaceSubmit }) {\n  const [name, setName] = React.useState(\"\");\n  const [link, setLink] = React.useState(\"\");\n\n  // After loading the current user from the API\n  // their data will be used in managed components.\n  React.useEffect(() => {\n    setName(\"\");\n    setLink(\"\");\n  }, [isOpen]); //When isOpen reset name and link\n\n  const handleAddName = (e) => setName(e[\"target\"][\"value\"]);\n  const handleAddLink = (e) => setLink(e[\"target\"][\"value\"]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault(); //Prevent the browser from navigating to the form address\n\n    onAddPlaceSubmit({\n      //Pass the values of the managed components to the external handler\n      name,\n      link,\n    });\n  };\n\n  return (\n    <PopupWithForm\n      name=\"add-card\"\n      title=\"New Place\"\n      formName=\"new\"\n      buttonSubmitTitle=\"Create\"\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n    >\n      <input\n        type=\"text\"\n        name=\"card-title\"\n        id=\"card-title-input\"\n        className=\"form__input form__input_type_card-title\"\n        placeholder=\"Title\"\n        required\n        minLength=\"1\"\n        maxLength=\"30\"\n        value={name || \"\"}\n        onChange={handleAddName}\n      />\n      <span id=\"card-title-input-error\"></span>\n      <input\n        type=\"url\"\n        name=\"card-link\"\n        id=\"card-link-input\"\n        className=\"form__input form__input_type_card-link\"\n        placeholder=\"Image link\"\n        required\n        value={link || \"\"}\n        onChange={handleAddLink}\n      />\n      <span id=\"card-link-input-error\"></span>\n    </PopupWithForm>\n  );\n}\n\nexport default AddPlacePopup;\n","import React from \"react\";\n\nfunction ImagePopup(props) {\n  //console.log(\"image\", props);\n  return (\n    <div\n      className={\n        props.isOpen\n          ? `popup popup_type_${props.name} popup_open`\n          : `popup popup_type_${props.name}`\n      }\n    >\n      <div className=\"popup__container popup__figure-container\">\n        <button\n          type=\"button\"\n          aria-label=\"Close image\"\n          className=\"popup__close-button\"\n          onClick={props.onClose}\n        ></button>\n        <figure className=\"popup__figure\">\n          <img\n            alt=\"default\"\n            src={props.selectedCard[\"link\"]}\n            className=\"popup__image\"\n          />\n          <figcaption\n            className=\"popup__caption\"\n            aria-label={props.selectedCard[\"name\"]}\n          >\n            {props.selectedCard[\"name\"]}\n          </figcaption>\n        </figure>\n      </div>\n    </div>\n  );\n}\n\nexport default ImagePopup;\n","import React from 'react';\n\n function Footer() {\n   return (\n      <footer className=\"footer\">\n        <p className=\"footer__text\">2021 Around The U.S.</p>\n      </footer>\n   );\n }\n   \n export default Footer;","export const renderLoading = (isLoading, popup, strApprove) => {\n  const buttonSubmit = popup.querySelector(\".form__button\");\n  buttonSubmit.textContent = isLoading ? \"Saving...\" : strApprove;\n  return buttonSubmit.textContent;\n};\n\nexport const customFetch = (url, headers) =>\n  fetch(url, headers)\n    .then((res) =>\n      res.ok ? res.json() : Promise.reject(`Error: ${res.statusText}`)\n    );\n    //.catch(console.error);\n","import { customFetch } from \"./utils.js\";\n\nclass Api {\n  constructor({ baseUrl, headers }) {\n    // constructor body\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  // Loading User Information from the Server\n  getUserInfo = () => {\n    return customFetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers,\n    });\n  };\n\n  // Loading Cards from the Server\n  getInitialCards = () => {\n    return customFetch(`${this._baseUrl}/cards`, {\n      headers: this._headers,\n    });\n  };\n\n  // Adding a New Card\n  addCard = ({ name, link }) => {\n    return customFetch(`${this._baseUrl}/cards`, {\n      headers: this._headers,\n      method: \"POST\",\n      body: JSON.stringify({\n        /*name: data[\"card-title\"],\n        link: data[\"card-link\"],*/\n        name,\n        link,\n      }),\n    });\n  };\n\n  // Deleting a Card\n  deleteCard = (cardId) => {\n    console.log(\"api\", cardId);\n    return customFetch(`${this._baseUrl}/cards/${cardId}`, {\n      headers: this._headers,\n      method: \"DELETE\",\n    });\n  };\n\n  // Adding  Likes\n  likeCard = (cardId) => {\n    return customFetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      headers: this._headers,\n      method: \"PUT\",\n    });\n  };\n\n  // Removing Likes\n  dislikeCard = (cardId) => {\n    return customFetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      headers: this._headers,\n      method: \"DELETE\",\n    });\n  };\n\n  changeLikeCardStatus = (cardId, isLiked) => {\n    return customFetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      headers: this._headers,\n      method: `${isLiked ? \"PUT\" : \"DELETE\"}`,\n    });\n  };\n\n  // Editing the Profile\n  editProfileUserInfo = ({ name, about }) => {\n    return customFetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers,\n      method: \"PATCH\",\n      body: JSON.stringify({\n        name,\n        about,\n      }),\n    });\n  };\n\n  // Updating Profile Picture\n  updateUserImage = (avatar) => {\n    return customFetch(`${this._baseUrl}/users/me/avatar`, {\n      headers: this._headers,\n      method: \"PATCH\",\n      body: JSON.stringify(avatar),\n    });\n  };\n}\n\nconst api = new Api({\n  baseUrl: \"https://around.nomoreparties.co/v1/group-12\",\n  headers: {\n    authorization: \"9bc9c0f1-5a8a-40aa-b985-20e7b24d1389\",\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport default api;","import React from \"react\";\nimport \"../index.css\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport ImagePopup from \"./ImagePopup\";\nimport Footer from \"./Footer\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nimport api  from \"../utils/api.js\";\n\nfunction App() {\n  //Popup\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] =\n    React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] =\n    React.useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\n  //const [isDeleteCardPopupOpen, setIsDeleteCardPopupOpen] = React.useState(false);\n\n  const [selectedCard, setSelectedCard] = React.useState({\n    name: \"\",\n    link: \"\",\n  });\n\n  const [currentUser, setCurrentUser] = React.useState({}); \n  const [cards, setCards] = React.useState([]);\n\n  /* Get User Information && Card List from the api */\n  React.useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getInitialCards()])\n      .then(([userData, cardData]) => {\n        setCurrentUser({ ...userData });\n        setCards([...cardData]);\n      })\n      .catch(console.error);\n  }, []);\n\n  /* Click handlers */\n  const handleEditAvatarClick = () => setIsEditAvatarPopupOpen(true);\n  const handleEditProfileClick = () => setIsEditProfilePopupOpen(true);\n  const handleAddPlaceClick = () => setIsAddPlacePopupOpen(true);\n  //const handleDeleteCard = () => setIsDeleteCardPopupOpen(true);\n\n  const handleCardClick = (card) => {\n    setSelectedCard({\n      name: card.name,\n      link: card.link,\n    });\n    setIsImagePopupOpen(true);\n  };\n\n  /* Like && DisLike Card handler */\n  const handleCardLike = (card) => {\n    const isLiked = card.likes.some((i) => i._id === currentUser._id); //Check one more time if this card was already liked\n    api //Send a request to the API and getting the updated card data\n      .changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        setCards((state) =>\n          state.map((c) => (c._id === card._id ? newCard : c))\n        );\n      })\n      .catch(console.error);\n  };\n\n  /* Delete Card handler */\n  const handleCardDelete = (card) => {\n    api\n      .deleteCard(card._id)\n      .then((res) => {\n        setCards(\n          (state) => state.filter((c) => c._id !== card._id) //Create array of cards that aren't delete\n        );\n        //setIsDeleteCardPopupOpen(false);\n      })\n      .catch(console.error);\n  };\n\n  /* Edit profile User handler */\n  const handleUpdateUser = (user) => {\n    api\n      .editProfileUserInfo(user)\n      .then((res) => {\n        setCurrentUser({\n          ...res,\n        });\n        setIsEditProfilePopupOpen(false);\n      })\n      .catch(console.error)\n      .finally(\n        () => console.log(\"finally\")\n        //renderLoading(false, editProfileModel, buttonsSettings.edit)\n      );\n  };\n\n  const handleUpdateAvatar = (link) => {\n    api\n      .updateUserImage(link)\n      .then((res) => {\n        setCurrentUser({\n          ...res,\n        });\n        //console.log(\"AVATAR APP\", res);\n        setIsEditAvatarPopupOpen(false);\n      })\n      .catch(console.error)\n      .finally(\n        () => console.log(\"finally\")\n        //renderLoading(false, editProfileModel, buttonsSettings.edit)\n      );\n  };\n\n  /* Add new Card handler */\n  const handleAddPlaceSubmit = (data) => {\n    //console.log(\"new\", data);\n    api\n      .addCard(data)\n      .then((res) => {\n        const newCard = {\n          name: data[\"name\"],\n          link: data[\"link\"],\n          _id: res._id, //_id i have some problem if i don't _id\n          owner: res.owner,\n          likes: res.likes,\n        };\n        setCards([newCard, ...cards]);\n        setIsAddPlacePopupOpen(false);\n      })\n      .catch(console.error)\n      .finally(\n        () => console.log(\"finally\")\n        //renderLoading(false, addCardModel, buttonsSettings.create)\n      );\n  };\n\n  const closeAllPopups = () => {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsImagePopupOpen(false);\n  };\n\n  return (\n    <div className=\"page__container\">\n      {/* embedding data from the currentUser using the  context provider - project 11 1.2 */}\n      <CurrentUserContext.Provider value={currentUser}>\n        <Header />\n        <Main\n          onEditAvatarClick={handleEditAvatarClick}\n          onEditProfileClick={handleEditProfileClick}\n          onAddPlaceClick={handleAddPlaceClick}\n          cards={cards}\n          onCardClick={handleCardClick}\n          onCardLike={handleCardLike}\n          onCardDelete={handleCardDelete}\n        />\n        <Footer />\n\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlaceSubmit={handleAddPlaceSubmit}\n        />\n\n        <PopupWithForm\n          name=\"delete-card\"\n          title=\"Are you sure ?\"\n          formName=\"delete\"\n          buttonSubmitTitle=\"Yes\"\n          //isOpen={isDeleteCardPopupOpen}\n          onClose={closeAllPopups}\n          //onSubmit={handleDeleteCard}\n        />\n\n        {/** Image Popup*/}\n        <ImagePopup\n          isOpen={isImagePopupOpen}\n          name=\"image\"\n          selectedCard={selectedCard}\n          onClose={closeAllPopups}\n        />\n      </CurrentUserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}